---
format: html
---

```{=html}
<style>
  .btn {
    color: #000000; /* Text color for general buttons */
  }
  .btn-primary {
    border-radius: 3px;
    border: 2px solid #000000; /* Ensures the border is visible and styled as intended */
    background-color: #ffffff; /* Initial background color set to white */
    color: #000000; /* Initial text color set to black */
    transition: background-color 0.3s, color 0.3s, border-color 0.3s; /* Smooth transition for color, background, and border color changes */
    outline: none; /* Removes the outline on focus added by browsers by default */
  }

  .btn-primary:hover, .btn-primary:focus, .btn-primary:active {
    background-color: #000000; /* Keeps background color black on hover, focus, and active */
    color: #ffffff; /* Keeps text color white on hover, focus, and active */
    border-color: #ffffff; /* Keeps border color white on hover, focus, and active */
  }

  /* Optionally, handle the case where the button is active (clicked) */
  .btn-primary:active {
    background-color: #000000; /* Even darker shade to indicate click, if desired */
    border-color: #ffffff;
  }
</style>

<div style="margin-top: 1em; text-align:center;">
  <button id="start-session" class="btn btn-primary">Start</button>
</div>

<div id="countdown" style="font-weight:bold; font-size:1.5em; margin:1em 0; text-align:center;"></div>

<div style="display:flex; justify-content:space-between; align-items:flex-start;">
  <video id="video" autoplay style="border:2px solid #ccc; border-radius:5px; width:640px; height:480px; margin-right:20px;"></video>
  <div id="strip" style="
    display:flex; 
    flex-direction:row; 
    flex-wrap:wrap;
    align-items:center; 
    justify-content: space-around;
    width: 380px;
  ">
  </div>
</div>


<script>
  const startBtn = document.getElementById('start-session');
  const countdownEl = document.getElementById('countdown');
  const video = document.getElementById('video');
  const strip = document.getElementById('strip');

  async function initCamera() {
    try {
      const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });
      video.srcObject = stream;
    } catch (err) {
      console.error('Error accessing camera:', err);
      alert('Could not access camera. Please allow camera access.');
    }
  }

  function storePhoto(dataUrl) {
    let photos = JSON.parse(localStorage.getItem('photostripImages')) || [];
    photos.push(dataUrl);
    localStorage.setItem('photostripImages', JSON.stringify(photos));
  }

  function capturePhoto() {
    const canvas = document.createElement('canvas');
    const context = canvas.getContext('2d');
    canvas.width = 180;
    canvas.height = 135;
    context.drawImage(video, 0, 0, canvas.width, canvas.height);

    const dataUrl = canvas.toDataURL('image/png');
    const img = new Image();
    img.src = dataUrl;
    img.style.width = "150px";
    img.style.height = "112.5px";
    img.style.margin = '10px';
    strip.appendChild(img);
    
    storePhoto(dataUrl);
  }

  async function startSession() {
    strip.innerHTML = '';  // Clear previous photos
    localStorage.removeItem('photostripImages');  // Clear any previous session images
    startBtn.disabled = true;
    startBtn.innerText = "Shooting in progress";

    const totalShots = 4;
    for (let i = 1; i <= totalShots; i++) {
      countdownEl.textContent = `3...`;
      await new Promise(resolve => setTimeout(resolve, 1000));
      countdownEl.textContent = `2...`;
      await new Promise(resolve => setTimeout(resolve, 1000));
      countdownEl.textContent = `1...`;
      await new Promise(resolve => setTimeout(resolve, 1000));

      capturePhoto();
      countdownEl.textContent = `Shot #${i} taken!`;
      if (i === totalShots) {  // After the last photo, redirect
          redirectToPhotostrip();
      }
    }

    countdownEl.textContent = "";  // Clear countdown
    startBtn.innerText = "Start";
    startBtn.disabled = false;
  }

  initCamera();
  startBtn.addEventListener('click', startSession);

  function redirectToPhotostrip() {
    window.location.href = 'photostrip.html';  // Redirect to the page where the photostrip is displayed
  }
</script>
